# Reusable workflow to run Verify Instrumentation on a single module.

name: Verify Instrumentation (single)
on:
  workflow_dispatch:
    inputs:
      module:
        required: true
        type: string
        description: 'The directory of the module to verify.'
      ref:
        required: true
        default: main
        type: string
        description: 'The ref (branch, SHA, tag?) to run the tests on'

jobs:
  verify-module:
    name: Verify Instrumentation (${{ github.event.inputs.module || inputs.module }})
    runs-on: ubuntu-20.04
    env:
      MODULE: ${{ github.event.inputs.module || inputs.module }}
      AWS_KEY: ${{ secrets.aws-secret-access-key }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Save JAVA_HOME as JDK11 for later usage
        run: |
          echo "JDK11=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up Java 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Save JAVA_HOME as JDK8 for later usage
        run: |
          echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      # Rewrite gradle.properties
      - name: set gradle.properties
        run: |
          sed -i -e "s|jdk8=8|jdk8=${JDK8}|
          s|jdk11=11|jdk11=${JDK11}|" gradle.properties.gha
          mv gradle.properties.gha gradle.properties

      # The verify task should not save to the cache. It will only use the cache from the build-agent job.
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true

      - name: Setup Gradle options
        run: echo "GRADLE_OPTIONS=-Porg.gradle.java.installations.auto-detect=false -Porg.gradle.java.installations.fromEnv=JDK11" >> $GITHUB_ENV

      ## AWS jars - plan to cache
      - name: Configure AWS Credentials
        if: ${{ env.AWS_KEY != '' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: us-east-2

      - name: Download S3 instrumentation jar zip
        if: ${{ env.AWS_KEY != '' }}
        run: aws s3 cp s3://nr-java-agent-s3-instrumentation/proprietary-jars-20220805.zip proprietary-jars.zip  ## Updated 2022

      - name: Unzip the instrumentation jars
        if: ${{ env.AWS_KEY != '' }}
        run: unzip proprietary-jars.zip

      - name: Log jars are in target libs
        if: ${{ env.AWS_KEY != '' }}
        run: find instrumentation -name "*.jar"
      ## End AWS jars - plan to cache (check for cache, restore if required)

      - name: Build agent
        run: ./gradlew $GRADLE_OPTIONS clean jar --parallel

      - name: Running verifyInstrumentation on (${{ env.MODULE }})
        run: ./gradlew $GRADLE_OPTIONS :instrumentation:${{ env.MODULE }}:verifyInstrumentation
