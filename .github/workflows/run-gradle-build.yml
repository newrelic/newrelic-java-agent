name: Reusable Workflow for running Gradle build commands

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      # The first JDK set up gets to be "primary".
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 8
      - name: save JAVA_HOME as JDK8 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk8=$JAVA_HOME" >> $GITHUB_ENV
      # The second JDK is not first in the path but does reset JAVA_HOME
      # JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: save JAVA_HOME as JDK11 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk11=$JAVA_HOME" >> $GITHUB_ENV
      # JDK 16
      - name: Set up JDK 16
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 16
      - name: save JAVA_HOME as JDK16 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk16=$JAVA_HOME" >> $GITHUB_ENV
      # Java is installed; document settings
      - name: log project settings
        run: |
          echo "--- Java versions ---"
          $ORG_GRADLE_PROJECT_jdk8/bin/java -version
          $ORG_GRADLE_PROJECT_jdk11/bin/java -version
          $ORG_GRADLE_PROJECT_jdk16/bin/java -version
      - name: correct JAVA_HOME
        run: echo "JAVA_HOME=$ORG_GRADLE_PROJECT_jdk8" >> $GITHUB_ENV
      # Restore the gradle cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # The docs say to use hashfiles, but gradle itself is smart enough to
          # re-download dependencies if it couldn't resolve them.
          # Because our gradle cache is _so big_, I think a 90% cache is far
          # better than a 0% cache.
          key: ${{ runner.os }}-gradle
          restore-keys: |
            ${{ runner.os }}-gradle
      # Start running the build.
      - name: run the tests
        run: ${{ inputs.command }}
