apply plugin: 'scala'

scala.zincVersion = "1.7.1"

isScalaProjectEnabled(project, "scala-2.12")

// The scala plugin uses zinc for incremental compiling. Zinc itself relies on scala, and while gradle is
// normally able to resolve the correct version of scala for zinc (even if that version is different than
// the version of scala required for the module), it certain circumstances the zinc scala version
// resolution fails for this module. It succeeds when gradle tasks are isolated to this module, but _may_
// fail when gradle tasks span multiple scala modules with different versions. Its not deterministic and
// quite mysterious.


jar {
    manifest { attributes 'Implementation-Title': 'com.newrelic.instrumentation.akka-http-core-10.2.0' }
}

dependencies {
    implementation(project(":agent-bridge"))
    implementation("com.typesafe.akka:akka-http-core_2.12:10.2.1")
    implementation("com.typesafe.akka:akka-stream_2.12:2.6.10")
}

verifyInstrumentation {
    passes('com.typesafe.akka:akka-http-core_2.11:[10.2.0-M1,)') {
        implementation("com.typesafe.akka:akka-stream_2.11:2.5.11")
    }
    fails('com.typesafe.akka:akka-http-core_2.11:[,10.2.0-M1)') {
        implementation("com.typesafe.akka:akka-stream_2.11:2.5.11")
    }
    passes('com.typesafe.akka:akka-http-core_2.12:[10.2.0-M1,)') {
        implementation("com.typesafe.akka:akka-stream_2.12:2.5.11")
    }
    fails('com.typesafe.akka:akka-http-core_2.12:[,10.2.0-M1)') {
        implementation("com.typesafe.akka:akka-stream_2.12:2.5.11")
    }
    fails('com.typesafe.akka:akka-http-core_2.13:[,10.2.0-M1)') {
        implementation("com.typesafe.akka:akka-stream_2.13:2.5.11")
    }
}

site {
    title 'Akka Http Core'
    type 'Framework'
}
