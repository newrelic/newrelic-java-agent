#
# This file configures the NewRelic Agent.  Place a copy of this file
# in RAILS_ROOT/config and edit the settings as appropriate.
#
common: &default_settings
  log_level: finest
  host: localhost
  api_host: localhost
  timeout: 5
  port: 3000
  app_name: Unit Test
  enable_auto_app_naming: false
  app_renaming:
    App1: App12
    App2: App12
    App3: App4
  trim_stats: false

  wait_for_rpm_connect: false

  distributed_tracing:
    enabled: true

  span_events:
    enabled: true
    collect_span_events: true

  # activemerchant instrumentation: only report dollar amounts (business data)
  # if the following is present and true; otherwise, only response times
  # and throughput to the gateway are reported
  capture_business_data: true

  enable_custom_tracing: true
  ignored_params: password, credit_card_number

  profiler:
    enabled: true

  sampler_service:
    memory_sample_delay_in_millis: 1000

  cross_application_tracer:
    cross_process_id: '12345#xyz'
    encoding_key: asdf
    trusted_account_ids: '12345'

  #============================== Browser Monitoring ===============================
  # New Relic Real User Monitoring gives you insight into the performance real users are
  # experiencing with your website. This is accomplished by measuring the time it takes for
  # your users' browsers to download and render your web pages by injecting a small amount
  # of JavaScript code into the header and footer of each page.
  browser_monitoring:
      # By default the agent automatically injects the monitoring JavaScript
      # into web pages. Set this attribute to false to turn off this behavior.
      auto_instrument: true

  jmx:
    enabled: true

  # checks for loading classes on the background thread
  check_bg_loading: true

  # these turn on  experimental database only AR instrumentation
  skip_ar_instrumentation: true
  db_only_ar_instrumentation: true

  capture_params: true

  thread_cpu_time_enabled: true

  reinstrument:
    attributes_enabled: true

  # This is the key generated by script/create_admin
  license_key: 'bootstrap_newrelic_admin_license_key_000'
  transaction_tracer:
    enabled: true
    record_sql: raw
    transaction_threshold: 0.1
    explain_threshold: 0.1
    explain_enabled: true
    stack_trace_threshold: 0.1
    collect_traces: true
    gc_time_enabled: true

    # experimental
    random_sample: true
    frustrating: true

  error_collector:
    enabled: true
    capture_source: true
    exception_handlers:
      - !exception_handler [ "test/newrelic/test/agent/ExceptionHandlerTest$ExceptionHandler", "handleException", "(Ljava/lang/Exception;)V" ]
      - !exception_handler [ "test/newrelic/test/agent/ExceptionHandlerTest$ExceptionHandler", "handleException", "(Ljava/lang/String;Ljava/lang/Throwable;)V" ]
      - !exception_handler [ "test/newrelic/test/agent/ExceptionHandlerTest$ExceptionHandler", "handleSpecialException", "(Ljava/lang/RuntimeException;Ljava/lang/String;)V" ]
      - test/newrelic/test/agent/ExceptionHandlerTest$ExceptionHandler.handleException2(Ljava/lang/String;Ljava/lang/Throwable;)V

  code_level_metrics:
    enabled: false
  class_transformer:
    includes: com/newrelic/.*Test, java.util.TreeMap, javax/activation/MimeType, com/newrelic/.*Object, java/awt/Shape, java/awt/geom/Line2D*, java/awt/geom/Path2D*, com/sun/grizzly/tcp/Request, com/sun/grizzly/util/http/Cookies, org/objectweb/asm/ClassWriter
    excludes: org/junit/.*
    trace_annotation_class_name: test.newrelic.test.agent.TraceAnnotationTest$CustomTrace
    com.newrelic.agent.instrumentation.pointcuts.ConcurrentCallablePointCut:
      enabled: true
    socket_input_stream:
      enabled: false
    com.newrelic.instrumentation.servlet-user:
      enabled: true

development:
  <<: *default_settings
  enabled: true
  developer: true
  apdex_t: 1.0
test:
  <<: *default_settings
  enabled: false
  developer: true
  monitor_daemons: false

# these are the settings that the server will use in
# the load test scenario
load_test:
  <<: *default_settings
  log_level: debug
  enabled: true
  error_collector:
    enabled: false

production:
  <<: *default_settings
  host: nope.example.invalid
  port: 80
  license_key: 'deadbeefcafebabe8675309babecafe1beefdead'
  enabled: true
  apdex_t: 1.0
  api_host: nope.example.invalid
  auto_app_naming_suffix: ' (Prod)'

expected_errors_test:
  <<: *default_settings
  error_collector:
    expected_classes:
      -
        class_name: "test.newrelic.test.agent.ExpectedErrorClass"
      -
        class_name: "test.newrelic.test.agent.ExpectedErrorClass"
        message: "findme"

    expected_status_codes: "450-475,520"

    expected_transaction_names: "Blah/"
